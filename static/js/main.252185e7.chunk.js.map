{"version":3,"sources":["index.js"],"names":["Button","props","_this","Object","_Users_luis_simon_says_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_luis_simon_says_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_luis_simon_says_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","color","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","onClick","style","backgroundColor","React","Component","Board","_this3","renderButton","colors","Game","_this4","gameStatus","playerColors","colorHistory","gameSpeed","playerStep","setState","showNextRound","newColor","Math","floor","random","length","push","i","j","indexOf","Promise","all","timeout","console","log","slice","concat","verifySteps","_this5","colorsList","map","handleClick","startGame","_callee4","chosenColors","_Users_luis_simon_says_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context4","prev","next","abrupt","stop","ms","resolve","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.252185e7.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { setTimeout } from \"timers\";\n\nclass Button extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            color: props.color\n        }\n    }\n\n    render(){\n        return (\n                <button     \n                className=\"square\" \n                onClick= { () => this.props.onClick()}\n                style={{backgroundColor: this.props.color}}>\n                    {this.props.color}\n                </button>\n        )\n    }\n}\n\nclass Board extends React.Component {\n\n    renderButton(color){\n        return(\n            <Button\n                onClick= {() => this.props.onClick(color)}\n                color={color}\n            />\n        )\n    }\n\n\n    render(){\n        return(\n            <div>\n                <div className=\"board-row\">\n                    {this.renderButton(this.props.colors[0])}\n                    {this.renderButton(this.props.colors[1])}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderButton(this.props.colors[2])}\n                    {this.renderButton(this.props.colors[3])}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            gameStatus: \"Game Over\",\n            playerColors: [],\n            colorHistory: [],\n            colors: ['Red', 'Blue', 'Yellow', 'Green'],\n            gameSpeed: 200,\n            playerStep: 0\n        }\n    }\n\n    async startGame(){\n        if(this.state.gameStatus === \"Game Over\"){\n            await this.setState({\n                gameStatus: \"Showing Turn\",\n                playerColors: [],\n                playerStep: 0,\n                colorHistory: []\n            })\n            this.showNextRound(this.state.colors, this.state.colorHistory)\n        }\n    }\n\n    async showNextRound(){\n        var colors = this.state.colors\n        var colorHistory = this.state.colorHistory\n\n        var newColor = colors[Math.floor(Math.random()*colors.length)]\n\n        colorHistory.push(newColor)\n\n        for(let i = 0; i < colorHistory.length; i++){\n\n            var j = colors.indexOf(colorHistory[i])\n\n            colors[j] = \"White\"\n\n            \n\n            await Promise.all([\n                this.setState({\n                    colors,\n                    colorHistory\n                }), timeout(this.state.gameSpeed)])\n\n            \n\n            colors = ['Red', 'Blue', 'Yellow', 'Green']\n\n            await Promise.all([\n                this.setState({\n                    colors\n                }), timeout(this.state.gameSpeed)])\n\n        }\n\n        this.setState({\n            gameStatus: \"Player Turn\"\n        })\n        console.log(this.state.gameStatus)\n\n\n    }\n    \n\n    async handleClick(color){\n        if(this.state.gameStatus === \"Player Turn\"){\n            var colorHistory = this.state.colorHistory\n            var playerColors = this.state.playerColors.slice().concat([color])\n            var playerStep = this.state.playerStep + 1\n            this.setState({\n                playerColors,\n                playerStep\n            })\n\n            console.log(this.state.gameStatus)\n\n            if(playerStep === colorHistory.length){\n                var result = await verifySteps(playerColors, colorHistory)\n                if(result){    \n                    this.setState({\n                        gameStatus: \"Showing Turn\",\n                        playerColors: [],\n                        playerStep: 0\n                    })\n                    this.showNextRound()\n                } else {\n                    this.setState({\n                        gameStatus: \"Game Over\"\n                    })\n                }\n            }\n        }\n    }\n\n    render() {\n        const playerColors = this.state.playerColors\n        const colors = this.state.colors\n        const colorsList = playerColors.map((color) => {\n            return (\n                <li>\n                    {color}\n                </li>\n            )\n        })\n\n        return(\n            <div className=\"game\">\n                <h1>{this.state.gameStatus}</h1>\n                <div className=\"game-board\">\n                    <Board \n                    onClick={(color) => this.handleClick(color)}\n                    colors={colors}/>\n                </div>\n                <div className=\"game-info\">\n                    {this.state.gameStatus === \"Game Over\" && \n                        <div className=\"info-row\">\n                            <button onClick={() => this.startGame()}>Start Game</button>\n                        </div>\n                    }\n                    <div className=\"info-row\">\n                        <h1>Colors Chosen:</h1>\n                        {colorsList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById(\"root\")\n);\n\nasync function verifySteps(chosenColors, colorHistory){\n    console.log(\"verifying steps\")\n\n    let i\n    for(i = 0; i < chosenColors.length; i++){\n        if(chosenColors[i] !== colorHistory[i]){\n            return false\n        }\n    }\n\n    return true\n}\n\nfunction timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}"],"sourceRoot":""}